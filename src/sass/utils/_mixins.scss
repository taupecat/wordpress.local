// @appearance { }
// 
// Vendor-prefix the "appearance" property (b/c autoprefixer doesn't).
// 
// Styleguide Helpers.Mixins.appearance

@mixin appearance($appearance) {
	-webkit-appearance: $appearance;
	-moz-appearance: $appearance;
	appearance: $appearance;
}


// @aspect-ratio( $width, $height) { }
// 
// Define a constant aspect ratio, regardless of actual size. Default is 4:3.
// 
// Styleguide Helpers.Mixins.aspect-ratio

@mixin aspect-ratio( $width: 4, $height: 3 ) {
	position: relative;

	&::before {
		content: "";
		display: block;
		padding-top: percentage( $height / $width );
		width: 100%;
	}

	> * {
		bottom: 0;
		left: 0;
		position: absolute;
		right: 0;
		top: 0;
	}
}


// @centered( $direction ) { }
// 
// Horizontal and/or vertical centering via `transform: translate()`. Parent element must have `position: relative;` (unless already set as `position: absolute`)
//
// $direction - How the child element should be centered (can be horizontal or vertical, defaults to both)
// 
// Styleguide Helpers.Mixins.centered

@mixin centered( $direction: "both" ) {
	position: absolute;

	@if ( $direction == "both" ) {

		left: 50%;
		top: 50%;
		transform: translate( -50%, -50% );

	} @else if ( $direction == "horizontal" ) {

		left: 50%;
		transform: translate( -50%, 0 );

	} @else if ( $direction == "vertical" ) {

		top: 50%;
		transform: translate( 0, -50% );
	}
}

// @highlight( $adjustment ) { }
// 
// Background coloring for debugging
//
// $adjustment - Any adjustments to the hue. By default, hue = 0 (pure magenta)
// 
// Styleguide Helpers.Mixins.highlight

@mixin highlight( $adjustment: 0 ) {

	$color__test: rgba( 255, 0, 255, 0.2 );

	background-color: adjust-hue( $color__test, $adjustment * 1deg );
}


// @hover-state { }
// 
// Quicker way of writing &:hover, &:active, &:focus. Does not take any arguments.
// 
// Styleguide Helpers.Mixins.hover-state

@mixin hover-state {

	&:hover,
	&:active,
	&:focus {
		@content;
	}
}


// @modernizr( $test ) { }
// 
// Make adjustments for browser support issues.
// 
// $test - Which test result we're looking to account for.
// 
// Styleguide Helpers.Mixins.modernizr

@mixin modernizr( $test ) {
	html.#{$test} & {
		@content;
	}
}
